/*
 * SPDX-FileCopyrightText: 2025 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#pragma once

#include <stdio.h>
#include <stdint.h>
#include <sdkconfig.h>
#include "gc2607_regs.h"
#include "gc2607_types.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
window_size=960*540,mipi 2lane
mclk=24mhz,pclk=84Mhz,row_time=24.3810us,mipi_data_rate=336Mbps
linelength=2048,framelength=1367
max_framerate=30fps
*/
static const gc2607_reginfo_t mipi_24Minput_2lane_960x540_raw10_30fps[] = {
    {0x03fe, 0xf0},
    {0x03fe, 0xf0},
    {0x03fe, 0x00},
    {0x03fe, 0x00},
    {0x03fe, 0x00},
    {0x03fe, 0x00},
    {0x0d06, 0x01},
    {0x0315, 0xd4},
    {0x0d82, 0x14}, // REG_MIPI_DPHY_TEST
    {0x0a70, 0x80},
    {0x0134, 0x5b},
    {0x0110, 0x01},
    {0x0dd1, 0x56},
    {0x0137, 0x03},
    {0x0135, 0x01},
    {0x0136, 0x2a},
    {0x0130, 0x08},
    {0x0132, 0x01},
    {0x031c, 0x93},
    {0x0218, 0x00}, // REG_ROW_BINNING
    {0x0340, 0x05}, // REG_FRAMELENGTH_RO_H
    {0x0341, 0x57}, // REG_FRAMELENGTH_RO_L
    {0x0342, 0x08}, // REG_CISCTL_HB_H
    {0x0343, 0x00}, // REG_CISCTL_HB_L
    {0x0220, 0x05}, // REG_FRAMELENGTH_RW_H
    {0x0221, 0x37}, // REG_FRAMELENGTH_RW_L
    {0x0af4, 0x2b},
    {0x0002, 0x30},
    {0x00c3, 0x3c},
    {0x0101, 0x00},
    {0x0d05, 0xcc},
    {0x0218, 0x00}, // REG_ROW_BINNING
    {0x005e, 0x84}, // REG_COL_BINNING
    {0x0007, 0x15},
    {0x0350, 0x01},
    {0x00c0, 0x07}, // REG_CISTL_WIN_WIDTH_H
    {0x00c1, 0x90}, // REG_CISTL_WIN_WIDTH_L
    {0x0346, 0x00}, // REG_ROW_START_H
    {0x0347, 0x02}, // REG_ROW_START_L
    {0x034a, 0x04}, // REG_CISTL_WIN_HEIGHT_H
    {0x034b, 0x40}, // REG_CISTL_WIN_HEIGHT_L
    {0x021f, 0x12}, // REG_OUT_WIN_OFFSET_UPDOWN
    {0x034c, 0x07}, // REG_OUT_WIN_WIDTH_H
    {0x034d, 0x80}, // REG_OUT_WIN_WIDTH_L
    {0x0353, 0x00}, // REG_OUT_WIN_X1_H
    {0x0354, 0x08}, // REG_OUT_WIN_X1_L
    {0x0d11, 0x10},
    {0x0d22, 0x00},
    {0x03f6, 0x4d},
    {0x03f5, 0x3c},
    {0x03f3, 0x54},
    {0x0d07, 0xdd},
    {0x0e71, 0x00},
    {0x0e72, 0x10},
    {0x0e17, 0x26},
    {0x0e22, 0x0d},
    {0x0e23, 0x20},
    {0x0e1b, 0x30},
    {0x0e3a, 0x15},
    {0x0e0a, 0x00},
    {0x0e0b, 0x00},
    {0x0e0e, 0x00},
    {0x0e2a, 0x08},
    {0x0e2b, 0x08},
    {0x0d02, 0x73},
    {0x0d22, 0x38},
    {0x0d25, 0x20},
    {0x0d18, 0x01},
    {0x0d19, 0x04},
    {0x0d1a, 0x00},
    {0x0d1b, 0x80},
    {0x0d1c, 0x05},
    {0x0d1d, 0x00},
    {0x0e6a, 0x39},
    {0x0050, 0x05},
    {0x0089, 0x03},
    {0x0070, 0x40}, // REG_WB_OFFSET_G1
    {0x0071, 0x40}, // REG_WB_OFFSET_R1
    {0x0072, 0x40}, // REG_WB_OFFSET_B1
    {0x0073, 0x40}, // REG_WB_OFFSET_G2
    {0x0040, 0x82},
    {0x0030, 0x80},
    {0x0031, 0x80},
    {0x0032, 0x80},
    {0x0033, 0x80},
    {0x0202, 0x04}, // REG_EXPOSURE_TIME_H
    {0x0203, 0x38}, // REG_EXPOSURE_TIME_L
    {0x0219, 0x00},
    {0x02b3, 0x00}, // REG_ANALOG_PGA_GAIN_H
    {0x02b3, 0x00}, // REG_ANALOG_PGA_GAIN_H
    {0x02b4, 0x00}, // REG_ANALOG_PGA_GAIN_L
    {0x0208, 0x04}, // REG_AUTO_PREGAIN_SYNC_H
    {0x0209, 0x00}, // REG_AUTO_PREGAIN_L
    {0x009e, 0x01}, // REG_GLOBAL_GAIN_H
    {0x009f, 0xa0}, // REG_GLOBAL_GAIN_L
    {0x0db8, 0x09}, // REG_T_CLK_POST_SET
    {0x0db6, 0x02}, // REG_T_CLK_PRE_SET
    {0x0db4, 0x05}, // REG_T_CLK_HS_PREPARE
    {0x0db5, 0x16}, // REG_T_CLK_ZERO_SET
    {0x0db9, 0x09}, // REG_T_CLK_TRAIL_SET
    {0x0d93, 0x05}, // REG_T_DATA_LPX_SET
    {0x0d94, 0x06}, // REG_T_DATA_HS_PREPARE_SET
    {0x0d95, 0x0b}, // REG_T_DATA_ZERO_SET
    {0x0d99, 0x09}, // REG_T_DATA_HS_TRAIL_SET
    {0x0082, 0x03},
    {0x0107, 0x05}, // REG_VIRTUAL_CHANNEL
    {0x0117, 0x01},
    {0x0d80, 0x07}, // REG_DPHY_LANE_EN
    {0x0d81, 0x02}, // REG_DPHY_MODE
    {0x0d84, 0x09}, // REG_LWC_SET_MANUAL_DPHY_H
    {0x0d85, 0x60}, // REG_LWC_SET_MANUAL_DPHY_L
    {0x0d86, 0x04},
    {0x0d87, 0xb1},
    {0x0222, 0x00},
    {0x0223, 0x01},
    {0x0117, 0x91},
    {0x03f4, 0x38},
    {0x0e69, 0x00},
    {0x0218, 0x80}, // REG_ROW_BINNING
    {0x005e, 0x09}, // REG_COL_BINNING
    {0x0135, 0x05},
    {0x0222, 0x08},
    {0x0223, 0xf6},
    {0x034c, 0x03}, // REG_OUT_WIN_WIDTH_H
    {0x034d, 0xc0}, // REG_OUT_WIN_WIDTH_L
    {0x0d84, 0x04}, // REG_LWC_SET_MANUAL_DPHY_H
    {0x0d85, 0xb0}, // REG_LWC_SET_MANUAL_DPHY_L
    {0x0d86, 0x02},
    {0x0d87, 0x59},
    {0x0af6, 0x00},
    {0x0b80, 0x30},
    {0x0b81, 0x00},
    {0x0b82, 0x00},
    {0x0b83, 0x00},
    {0x0b84, 0x30},
    {0x0b85, 0x00},
    {0x0b86, 0x00},
    {0x0b87, 0x00},
    {0x0b88, 0x5f},
    {0x0b89, 0x00},
    {0x0b8a, 0x00},
    {0x0b8b, 0x00},
    {0x0b8c, 0x07},
    {0x0b8d, 0x00},
    {0x0b8e, 0x00},
    {0x0b8f, 0x00},
    {0x0b90, 0x10},
    {0x0b91, 0x00},
    {0x0b92, 0x00},
    {0x0b93, 0x00},
    {0x0b94, 0x00},
    {0x0b95, 0x00},
    {0x0b96, 0x00},
    {0x0b97, 0x00},
    {0x0b98, 0x00},
    {0x0b99, 0x00},
    {0x0b9a, 0x00},
    {0x0b9b, 0x00},
    {0x0b9c, 0x18},
    {0x0b9d, 0x00},
    {0x0b9e, 0x00},
    {0x0b9f, 0x00},
    {0x0ba0, 0x17},
    {0x0ba1, 0x00},
    {0x0ba2, 0x00},
    {0x0ba3, 0x00},
    {0x0ba4, 0x03},
    {0x0ba5, 0x00},
    {0x0ba6, 0x00},
    {0x0ba7, 0x00},
    {0x0ba8, 0x8c},
    {0x0ba9, 0x00},
    {0x0baa, 0x00},
    {0x0bab, 0x00},
    {0x0bac, 0x8c},
    {0x0bad, 0x00},
    {0x0bae, 0x00},
    {0x0baf, 0x00},
    {0x0bb0, 0x02},
    {0x0bb1, 0x00},
    {0x0bb2, 0x00},
    {0x0bb3, 0x00},
    {0x0bb4, 0x00},
    {0x0bb5, 0x00},
    {0x0bb6, 0x00},
    {0x0bb7, 0x00},
    {0x0bb8, 0x02},
    {0x0bb9, 0x00},
    {0x0bba, 0x00},
    {0x0bbb, 0x00},
    {0x0bbc, 0x05},
    {0x0bbd, 0x00},
    {0x0bbe, 0x00},
    {0x0bbf, 0x00},
    {0x0bc0, 0x00},
    {0x0bc1, 0x00},
    {0x0bc2, 0x00},
    {0x0bc3, 0x00},
    {0x0bc4, 0x06},
    {0x0bc5, 0x00},
    {0x0bc6, 0x00},
    {0x0bc7, 0x00},
    {0x0bc8, 0x0c},
    {0x0bc9, 0x00},
    {0x0bca, 0x00},
    {0x0bcb, 0x00},
    {0x0bcc, 0x80},
    {0x0bcd, 0x00},
    {0x0bce, 0x00},
    {0x0bcf, 0x00},
    {0x0bd0, 0x80},
    {0x0bd1, 0x00},
    {0x0bd2, 0x00},
    {0x0bd3, 0x00},
    {0x0bd4, 0x4e},
    {0x0bd5, 0x00},
    {0x0bd6, 0x00},
    {0x0bd7, 0x00},
    {0x0bd8, 0x56},
    {0x0bd9, 0x00},
    {0x0bda, 0x00},
    {0x0bdb, 0x00},
    {0x0bdc, 0x2e},
    {0x0bdd, 0x00},
    {0x0bde, 0x00},
    {0x0bdf, 0x00},
    {0x0be0, 0x0e},
    {0x0be1, 0x00},
    {0x0be2, 0x00},
    {0x0be3, 0x00},
    {0x0be4, 0x4e},
    {0x0be5, 0x00},
    {0x0be6, 0x00},
    {0x0be7, 0x00},
    {0x0be8, 0x08},
    {0x0be9, 0x00},
    {0x0bea, 0x00},
    {0x0beb, 0x00},
    {0x0bec, 0x03},
    {0x0bed, 0x00},
    {0x0bee, 0x00},
    {0x0bef, 0x00},
    {0x0bf0, 0x03},
    {0x0bf1, 0x00},
    {0x0bf2, 0x00},
    {0x0bf3, 0x00},
    {0x0bf4, 0x03},
    {0x0bf5, 0x00},
    {0x0bf6, 0x00},
    {0x0bf7, 0x00},
    {0x0bf8, 0x02},
    {0x0bf9, 0x00},
    {0x0bfa, 0x00},
    {0x0bfb, 0x00},
    {0x0bfc, 0xf1},
    {0x0bfd, 0x00},
    {0x0bfe, 0x00},
    {0x0bff, 0x00},
    {0x0a70, 0x80},
    {0x0a71, 0x00},
    {0x0a72, 0x00},
    {0x0a67, 0x80},
    {0x0a66, 0x00},
    {0x0a4b, 0x00},
    {0x0a4e, 0x80},
    {0x0a4d, 0x0e},
    {0x0a4e, 0x0c},
    {0x00c6, 0x04},
    {0x00c7, 0x40},
    {0x00c8, 0x07},
    {0x00c9, 0x98},
    {0x00c3, 0x35},
    {0x005d, 0x04},
    {0x00c4, 0x00},
    {0x00c5, 0x01},
    {0x0a8c, 0x01},
    {0x0a8c, 0x00},
    {0x031c, 0xf3},
    {0x0a66, 0x00},
    {0x0aa1, 0x00},
    {0x0aa2, 0x68},
    {0x0aa3, 0x00},
    {0x0aa4, 0x40},
    {0x0a90, 0x03},
    {0x0a91, 0x0f},
    {0x0a94, 0x80},
    // sleep 20
    {0x005d, 0x00}, // REG_COL_BINNING (final config)
    {0x0a94, 0x00},
    {0x00c4, 0x80},
    {0x031c, 0x93},
    {0x0a70, 0x00},
};

#ifdef __cplusplus
}
#endif
